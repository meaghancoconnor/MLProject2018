

class DataWrangler:
    @classmethod
    def _get_data(cls, file, separator, conversion):
        data = []
        for line in file:
            if conversion:
                data.append([conversion(item.strip()) for item in line.strip().split()])
            else:
                data.append([item.strip() for item in line.strip().split(separator)])

        return data

    @classmethod
    def read_from_file(cls, filepath, conversion = None, filetype = ""):
        data = []
        with open(filepath, 'r') as f:
            if filetype == "":
                data = cls._get_data(f, ' ', conversion)
            elif filetype == "csv":
                data = cls._get_data(f, ',', conversion)
            elif filetype == "tsv":
                data = cls._get_data(f, '\t', conversion)
            else:
                print("Filetype not supported")

        return data

    @classmethod
    def separate_train_test_data(cls, dataset, train_labels_indices):
        train_features, test_features, test_indices, train_labels = [], [], [], []
        hash = [0] * len(dataset)

        for label in train_labels_indices:
            train_features.append(dataset[int(label[1])])
            train_labels.append(label[0])
            hash[int(label[1])] = 1

        for key in range(len(hash)):
            if hash[key] == 0:
                test_features.append(dataset[key])
                test_indices.append(key)

        return train_features, test_features, test_indices, train_labels
